name: VirtualHere Server Patcher and Key Generator

on:
  workflow_dispatch:
    inputs:
      target_sn:
        description: "请输入序列号 (用于安卓密钥模式或完整模式的初始修补)"
        required: true
        default: ""
      device_count:
        description: "请输入客户端设备数量"
        required: false
        default: "63"
      android_key_only:
        description: "是否仅生成安卓免Root密钥？"
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Environment
        run: |
          mkdir -p tools output/patched_binaries
          sudo apt-get update
          sudo apt-get install -y upx-ucl

      - name: Extract Activator Tools
        run: |
          echo "解压 activator2_linux.zip..."
          unzip -o activator2_linux.zip -d tools/
          echo "文件解压完成"
          chmod +x tools/*

      - name: Set Library Path
        run: |
          echo "设置库文件路径: LD_LIBRARY_PATH=$(pwd)/tools"
          echo "LD_LIBRARY_PATH=$(pwd)/tools" >> $GITHUB_ENV

      - name: Generate Android Key Only Mode
        if: ${{ inputs.android_key_only }}
        run: |
          echo "运行模式: 仅生成安卓免Root密钥"
          echo "输入序列号: ${{ inputs.target_sn }}"
          
          cd tools
          echo "当前目录: $(pwd)"
          
          # 创建一个虚拟文件用于生成密钥
          echo "创建虚拟文件 dummy_file..."
          touch dummy_file
          
          # 正确的命令格式：activator 文件名 序列号
          echo "执行命令: ./activator dummy_file ${{ inputs.target_sn }}"
          
          echo "=== 完整输出 ==="
          ./activator dummy_file ${{ inputs.target_sn }}
          echo "=== 完整输出结束 ==="
          
          # 再次运行并提取密钥
          echo "再次运行命令并提取 License= 行..."
          ./activator dummy_file ${{ inputs.target_sn }} 2>&1 | grep "^License=" | tee ../output/android_license_key.txt
          
          # 检查是否成功生成密钥
          if [ ! -s ../output/android_license_key.txt ]; then
            echo "错误: 未能生成有效的许可证密钥！"
            echo "尝试其他方法..."
            
            # 尝试直接捕获所有输出
            ./activator dummy_file ${{ inputs.target_sn }} > ../output/raw_output.txt 2>&1
            echo "原始输出已保存到 output/raw_output.txt"
            
            # 尝试从原始输出中提取可能的关键信息
            grep -i "license\|key\|=" ../output/raw_output.txt | tee ../output/android_license_key.txt
            
            if [ ! -s ../output/android_license_key.txt ]; then
              echo "最终错误: 无法生成密钥，请检查工具版本和序列号格式"
              cat ../output/raw_output.txt
              exit 1
            fi
          fi
          
          echo "安卓密钥已生成并保存到 output/android_license_key.txt"
          echo "生成的密钥: $(cat ../output/android_license_key.txt)"

      - name: Upload Android License Key
        if: ${{ inputs.android_key_only }}
        uses: actions/upload-artifact@v4
        with:
          name: Android-License-Key
          path: output/android_license_key.txt

      - name: Upload Raw Output
        if: ${{ inputs.android_key_only }}
        uses: actions/upload-artifact@v4
        with:
          name: Raw-Output
          path: output/raw_output.txt

      - name: Show Output Info
        run: |
          if ${{ inputs.android_key_only }}; then
            echo "工作流完成！"
            if [ -f output/android_license_key.txt ]; then
              echo "生成的密钥内容：$(cat output/android_license_key.txt)"
            fi
            if [ -f output/raw_output.txt ]; then
              echo "原始输出已保存到 Raw-Output Artifact"
            fi
          fi
