name: VirtualHere Server Patcher and Key Generator

on:
  workflow_dispatch:
    inputs:
      target_sn:
        description: "请输入序列号 (用于安卓密钥模式)"
        required: true
        default: ""
      android_key_only:
        description: "是否仅生成安卓免Root密钥？"
        type: boolean
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Environment
        run: |
          mkdir -p tools output
          sudo apt-get update
          sudo apt-get install -y upx-ucl file

      - name: Extract Activator Tools
        run: |
          echo "解压 activator2_linux.zip..."
          unzip -o activator2_linux.zip -d tools/
          echo "文件信息:"
          file tools/*
          chmod +x tools/*

      - name: Install System Crypto Library
        run: |
          echo "安装系统版的 libcrypto..."
          # 尝试安装兼容的 libcrypto 库
          sudo apt-get install -y libssl-dev openssl
          # 查找系统中的 libcrypto
          find /usr -name "*libcrypto*" 2>/dev/null | head -10

      - name: Test Library Loading
        run: |
          echo "测试库文件加载..."
          cd tools
          
          # 方法1: 使用 LD_LIBRARY_PATH 运行
          echo "=== 方法1: 使用 LD_LIBRARY_PATH ==="
          LD_LIBRARY_PATH=$(pwd) ./activator --help 2>&1 | tee ../output/method1.txt || echo "方法1失败"
          
          # 方法2: 使用 ld.so 直接指定库路径
          echo "=== 方法2: 使用 ld.so ==="
          /lib64/ld-linux-x86-64.so.2 --library-path $(pwd) ./activator --help 2>&1 | tee ../output/method2.txt || echo "方法2失败"
          
          # 方法3: 复制库文件到系统路径
          echo "=== 方法3: 复制库到 /tmp ==="
          cp libcrypto.so.1.1 /tmp/
          LD_LIBRARY_PATH=/tmp ./activator --help 2>&1 | tee ../output/method3.txt || echo "方法3失败"
          
          # 方法4: 创建符号链接
          echo "=== 方法4: 创建符号链接 ==="
          sudo ln -sf $(pwd)/libcrypto.so.1.1 /usr/lib/ || true
          sudo ldconfig
          ./activator --help 2>&1 | tee ../output/method4.txt || echo "方法4失败"

      - name: Generate License Key
        run: |
          echo "尝试生成许可证密钥..."
          cd tools
          
          # 使用最可能成功的方法
          echo "序列号: ${{ inputs.target_sn }}"
          
          # 创建测试文件
          head -c 100 /dev/urandom > test_file
          
          # 尝试生成密钥
          LD_LIBRARY_PATH=$(pwd) ./activator test_file ${{ inputs.target_sn }} 2>&1 | tee ../output/raw_output.txt
          
          # 提取许可证信息
          grep -i "license\|key" ../output/raw_output.txt > ../output/license_candidates.txt || true
          
          # 显示所有可能包含许可证的行
          echo "可能的许可证信息:"
          cat ../output/license_candidates.txt || echo "未找到许可证信息"

      - name: Alternative Approach - Use Windows Version
        run: |
          echo "如果Linux版本无法工作，建议使用Windows版本的activator"
          echo "请下载 activator2_win.zip 并在Windows系统中运行:"
          echo "activator.exe xx 63 ${{ inputs.target_sn }}"
          echo "预期的输出格式应该是:"
          echo "License=序列号,63,XXXXXXXXXXXX"
          echo "请将生成的密钥手动保存"

      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: Debug-Results
          path: output/

      - name: Final Instructions
        run: |
          echo "=== 最终说明 ==="
          if [ -f output/license_candidates.txt ] && [ -s output/license_candidates.txt ]; then
            echo "找到可能的许可证信息:"
            cat output/license_candidates.txt
            echo "请检查上述输出，正确的格式应该是: License=序列号,63,XXXXXXXXXXXX"
          else
            echo "❌ 无法在Linux环境中生成密钥"
            echo "✅ 建议解决方案:"
            echo "1. 下载 activator2_win.zip"
            echo "2. 在Windows电脑上解压"
            echo "3. 打开命令提示符，导航到解压目录"
            echo "4. 运行命令: activator.exe xx 63 ${{ inputs.target_sn }}"
            echo "5. 复制输出的 License=... 字符串"
            echo "6. 在VirtualHere客户端中输入该密钥"
          fi
