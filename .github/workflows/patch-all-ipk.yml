name: Patch VirtualHere USB Server

on:
  workflow_dispatch:
    inputs:
      serial_number:
        description: 'Serial Number (e.g., 123456789abcdef)'
        required: true
        type: string
      device_count:
        description: 'Number of devices (1-64)'
        required: false
        default: '63'
        type: string

permissions:
  contents: write

jobs:
  patch:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup and Patch
      run: |
        # 准备工具
        unzip activator_linux.zip
        chmod +x activator upx
        export LD_LIBRARY_PATH=$PWD:$LD_LIBRARY_PATH
        
        # 变量
        SN="${{ github.event.inputs.serial_number }}"
        DEVICES="${{ github.event.inputs.device_count }}"
        
        # 创建输出目录
        mkdir -p patched_files
        
        # 处理每个IPK文件
        for ipk in ipk/*.ipk; do
          if [ -f "$ipk" ]; then
            echo "Processing: $ipk"
            filename=$(basename "$ipk")
            
            # 创建工作目录
            rm -rf work
            mkdir work
            cd work
            
            # 解压IPK
            tar -xzf "../$ipk" 2>/dev/null || ar x "../$ipk"
            
            # 如果是ar格式，解压data.tar.gz
            if [ -f "data.tar.gz" ]; then
              tar -xzf data.tar.gz
              rm -f *.tar.gz debian-binary
            fi
            
            # 查找vhusbd文件
            VHUSBD=$(find . -name "vhusbd*" -type f ! -name "*.exe" | head -1)
            
            if [ -n "$VHUSBD" ]; then
              echo "Found: $VHUSBD"
              
              # 步骤1: 解压
              ../upx -d "$VHUSBD" 2>/dev/null || true
              
              # 步骤3: 打补丁
              echo "Patching..."
              OUTPUT=$(../activator "$VHUSBD" "$DEVICES" "$SN" 2>&1)
              echo "$OUTPUT"
              
              # 提取License
              LICENSE=$(echo "$OUTPUT" | grep "License=" | sed 's/.*License=//')
              if [ -n "$LICENSE" ]; then
                echo "$LICENSE" > "../patched_files/${SN}_license.txt"
                echo "License: $LICENSE"
              fi
              
              # 步骤4: 压缩
              ../upx -9 "$VHUSBD" 2>/dev/null || true
              
              # 重新打包IPK
              tar -czf "../patched_files/${SN}${filename}" *
              echo "Created: ${SN}${filename}"
            fi
            
            cd ..
          fi
        done
        
        # 显示结果
        echo "===== Results ====="
        ls -la patched_files/
        if [ -f "patched_files/${SN}_license.txt" ]; then
          echo "License Key:"
          cat "patched_files/${SN}_license.txt"
        fi
    
    - name: Upload files
      uses: actions/upload-artifact@v4
      with:
        name: patched-${{ github.event.inputs.serial_number }}
        path: patched_files/*
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.event.inputs.serial_number }}-${{ github.run_number }}
        name: Patched - ${{ github.event.inputs.serial_number }}
        files: patched_files/*
        fail_on_unmatched_files: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
