name: VirtualHere Server Patcher and Key Generator

on:
  workflow_dispatch:
    inputs:
      target_sn:
        description: "请输入序列号 (用于安卓密钥模式)"
        required: true
        default: ""
      android_key_only:
        description: "是否仅生成安卓免Root密钥？"
        type: boolean
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Environment
        run: |
          mkdir -p tools output
          sudo apt-get update
          sudo apt-get install -y upx-ucl file

      - name: Extract Activator Tools
        run: |
          echo "解压 activator2_linux.zip..."
          unzip -o activator2_linux.zip -d tools/
          echo "文件信息:"
          file tools/*
          echo "文件大小:"
          ls -la tools/
          chmod +x tools/*

      - name: Test Different Approaches
        run: |
          cd tools
          
          echo "=== 方法1: 直接运行查看帮助 ==="
          ./activator --help || ./activator -h || echo "无法获取帮助信息"
          
          echo "=== 方法2: 尝试不同的参数格式 ==="
          # 尝试使用之前文档中提到的格式
          echo "尝试: ./activator xx 63 ${{ inputs.target_sn }}"
          ./activator xx 63 ${{ inputs.target_sn }} 2>&1 | tee ../output/attempt1.txt || echo "方法2失败"
          
          echo "=== 方法3: 尝试修补一个真实文件 ==="
          # 创建一个小的二进制文件进行测试
          echo "创建测试文件..."
          head -c 100 /dev/urandom > test_binary
          echo "尝试修补测试文件..."
          ./activator test_binary ${{ inputs.target_sn }} 2>&1 | tee ../output/attempt2.txt || echo "方法3失败"
          
          echo "=== 方法4: 尝试无参数运行 ==="
          ./activator 2>&1 | tee ../output/attempt3.txt || echo "方法4失败"

      - name: Analyze Results
        run: |
          echo "=== 分析各方法输出 ==="
          for attempt in output/attempt*.txt; do
            if [ -f "$attempt" ]; then
              echo "--- $attempt ---"
              cat "$attempt"
              echo ""
              
              # 尝试提取许可证信息
              if grep -i "license\|key" "$attempt"; then
                echo "找到许可证信息！"
                grep -i "license\|key" "$attempt" > output/android_license_key.txt
              fi
            fi
          done
          
          # 检查是否成功生成密钥
          if [ -f output/android_license_key.txt ] && [ -s output/android_license_key.txt ]; then
            echo "成功生成密钥: $(cat output/android_license_key.txt)"
          else
            echo "未能自动生成密钥，请手动检查输出"
            # 创建详细的调试报告
            echo "=== 调试报告 ===" > output/debug_report.txt
            echo "序列号: ${{ inputs.target_sn }}" >> output/debug_report.txt
            echo "文件信息:" >> output/debug_report.txt
            file tools/* >> output/debug_report.txt
            echo "各方法输出:" >> output/debug_report.txt
            cat output/attempt*.txt >> output/debug_report.txt 2>/dev/null || true
          fi

      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: Debug-Results
          path: output/

      - name: Final Message
        run: |
          if [ -f output/android_license_key.txt ] && [ -s output/android_license_key.txt ]; then
            echo "✅ 成功生成密钥！"
            echo "密钥: $(cat output/android_license_key.txt)"
          else
            echo "❌ 无法自动生成密钥"
            echo "请下载 Debug-Results Artifact 查看详细输出"
            echo "根据输出内容，您可能需要："
            echo "1. 检查 activator 工具版本是否正确"
            echo "2. 尝试不同的序列号格式"
            echo "3. 手动运行命令查看确切用法"
          fi
