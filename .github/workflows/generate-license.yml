name: VirtualHere Patcher

on:
  workflow_dispatch:
    inputs:
      serial_number:
        description: '输入序列号 (SN)'
        required: true
        default: 'aaabbbcccddd'
      device_count:
        description: '客户端数量'
        required: true
        default: '63'
      android_noroot:
        description: '安卓免root密钥获取'
        type: boolean
        required: false
        default: false

jobs:
  patch:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup environment
      run: |
        # 安装必要工具
        sudo apt-get update
        sudo apt-get install -y upx-ucl unzip
        
        # 解压activator
        unzip -o activator2_linux.zip
        chmod +x activator
        
        # 创建输出目录
        mkdir -p patched_files
        mkdir -p licenses
        
    - name: Process VirtualHere files
      run: |
        # 处理ipk文件夹中的所有vhusbd文件
        for file in ipk/vhusbd*; do
          if [ -f "$file" ]; then
            filename=$(basename "$file")
            echo "===== 处理文件: $filename ====="
            
            # 复制文件到工作目录
            cp "$file" "./$filename"
            
            # 尝试解压
            echo "尝试解压 $filename..."
            if upx -d "$filename" 2>/dev/null; then
              echo "✓ 解压成功"
              NEED_COMPRESS=true
            else
              echo "✗ 文件未压缩或解压失败，直接修补"
              NEED_COMPRESS=false
            fi
            
            # 修补文件
            echo "修补 $filename..."
            OUTPUT=$(./activator "$filename" "${{ github.event.inputs.serial_number }}" 2>&1)
            echo "$OUTPUT"
            
            # 提取License信息
            LICENSE=$(echo "$OUTPUT" | grep "License=" | cut -d'=' -f2-)
            if [ ! -z "$LICENSE" ]; then
              echo "$filename: $LICENSE" >> licenses/licenses.txt
              echo "License for $filename: $LICENSE"
            fi
            
            # 如果之前解压成功，则压缩
            if [ "$NEED_COMPRESS" = true ]; then
              echo "压缩 $filename..."
              upx -9 "$filename" 2>/dev/null || echo "压缩失败，保留未压缩版本"
            fi
            
            # 移动到输出目录
            mv "$filename" "patched_files/$filename"
            echo "✓ $filename 处理完成"
            echo ""
          fi
        done
        
    - name: Generate Android No-Root License
      if: ${{ github.event.inputs.android_noroot == 'true' }}
      run: |
        echo "===== 生成安卓免root密钥 ====="
        
        # 获取实际的序列号（如果用户使用了默认值，需要从服务器获取真实SN）
        SN="${{ github.event.inputs.serial_number }}"
        DEVICES="${{ github.event.inputs.device_count }}"
        
        # 执行activator生成密钥
        OUTPUT=$(./activator xx "$DEVICES" "$SN" 2>&1)
        echo "$OUTPUT"
        
        # 提取License信息
        LICENSE=$(echo "$OUTPUT" | grep "License=" | cut -d'=' -f2-)
        if [ ! -z "$LICENSE" ]; then
          echo "Android No-Root License: $LICENSE" | tee -a licenses/android_noroot_license.txt
          echo "" >> licenses/android_noroot_license.txt
          echo "使用方法：" >> licenses/android_noroot_license.txt
          echo "在Windows客户端 USB服务器 - 许可证 - 输入密钥中输入: $LICENSE" >> licenses/android_noroot_license.txt
        fi
        
    - name: Create summary
      run: |
        echo "# VirtualHere 修补完成报告" > patched_files/README.md
        echo "" >> patched_files/README.md
        echo "## 修补参数" >> patched_files/README.md
        echo "- 序列号: ${{ github.event.inputs.serial_number }}" >> patched_files/README.md
        echo "- 客户端数量: ${{ github.event.inputs.device_count }}" >> patched_files/README.md
        echo "- 安卓免root: ${{ github.event.inputs.android_noroot }}" >> patched_files/README.md
        echo "" >> patched_files/README.md
        
        echo "## 修补的文件" >> patched_files/README.md
        ls -la patched_files/vhusbd* 2>/dev/null | awk '{print "- "$9" ("$5" bytes)"}' >> patched_files/README.md || echo "无文件" >> patched_files/README.md
        echo "" >> patched_files/README.md
        
        if [ -f licenses/licenses.txt ]; then
          echo "## 生成的许可证" >> patched_files/README.md
          echo '```' >> patched_files/README.md
          cat licenses/licenses.txt >> patched_files/README.md
          echo '```' >> patched_files/README.md
        fi
        
        if [ -f licenses/android_noroot_license.txt ]; then
          echo "" >> patched_files/README.md
          echo "## Android免Root许可证" >> patched_files/README.md
          echo '```' >> patched_files/README.md
          cat licenses/android_noroot_license.txt >> patched_files/README.md
          echo '```' >> patched_files/README.md
        fi
        
        # 复制许可证文件到patched_files
        cp -r licenses/* patched_files/ 2>/dev/null || true
        
    - name: Upload patched files
      uses: actions/upload-artifact@v4
      with:
        name: virtualhere-patched-${{ github.event.inputs.serial_number }}
        path: patched_files/
        retention-days: 30
        
    - name: Display results
      run: |
        echo "===== 修补完成 ====="
        echo "修补的文件已上传到 Artifacts"
        echo ""
        if [ -f licenses/licenses.txt ]; then
          echo "生成的许可证："
          cat licenses/licenses.txt
        fi
        if [ -f licenses/android_noroot_license.txt ]; then
          echo ""
          echo "Android免Root许可证："
          cat licenses/android_noroot_license.txt
        fi
